# role this node will have in the network
# role: head

# how many requests should the node process in parallel
# concurrency: 10

# directory where node will keep files needed for operation
# workspace: workspace

# directory where node will maintain its database
# db: db

# multiaddresses of nodes this node will try to connect to on boot
# boot-nodes: []

# should the node load its attributes from IPFS/IPNS
# load-attributes: false

# topics this node should subscribe to
# topics: []

# log information
# log:
  # level: debug

# connectivity information
# connectivity:

  # address: 0.0.0.0
  # port: 9000

  # private key this node will use for its operation.
  # this determines how this node is identified on the network
  # private-key: /path/to/private/key

  # external address that the node will advertise
  # dialback-address: 10.10.10.10

  # external port that the node will advertise
  # dialback-port: 9000

  # use websocket protocol for communication
  # websocket: false

  # port to use for websocket communication
  # websocket-port: 9010

  # external port the node will advertise for websocket communication
  # websocket-dialback-port: 9010

  # do not dial back peers known from past runs
  # no-dialback-peers: false

  # halt if the node cannot reach boot nodes
  # must-reach-dialback-peers: false

  # try to maintain as many connections as possible (useful for head nodes that need to be connected to many workers)
  # disablle-connection-limits: false

  # number of connections node will aim to have
  # connection-count: 512


# head node configuration
# head:
  # where will the head node serve the REST API
  # rest-api: localhost:8888

# worker node configuration
# worker:
  # local path to Bless Runtime
  # runtime-path: /path/to/bls/runtime

  # name of the Runtime executable
  # runtime-cli: bls-runtime

  # max percentage of CPU time Bless will use for execution (1.0 for 100%)
  # cpu-percentage-limit: 1.0

  # max amount of memory (in kB) Bless will use for execution (0 is unlimited)
  # memory-limit: 0

# telemetry:
  # tracing:
    # should node emit tracing information
    # enable: false

    # how often should tracing information be sent
    # exporter-batch-timeout: 5s

    # configuration for tracing over GRPC
    # grpc:
      # endpoint where tracing data will be sent over GRPC.
      # endpoint: localhost:4317

    # configuration for tracing over HTTP
    # http:
      # endpoint where tracing data will be sent over HTTP.
      # endpoint: localhost:4318

  # metrics:
    # should node publish metrics
    # enable: false

    # address where node should serve metrics on
    # prometheus-address: localhost:8888

